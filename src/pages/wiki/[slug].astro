---
import WikiLayout from '../../layouts/WikiLayout.astro';
import { wikiPages, wikiCategories } from '../../data/wiki';
import { marked } from 'marked';
import dayjs from 'dayjs';

// Generate static paths for all wiki pages
export async function getStaticPaths() {
  return wikiPages.map(page => ({
    params: { slug: page.slug },
    props: { page },
  }));
}

// Get the wiki page data
const { page } = Astro.props;

// Parse the markdown content
const htmlContent = marked.parse(page.content) as string;

// Format the date
const formattedDate = dayjs(page.lastUpdated).format('MMMM D, YYYY');

// Get category info
const categoryInfo = wikiCategories.find(cat => cat.name === page.category);

// Get related pages (same category, excluding current page)
const relatedPages = wikiPages
  .filter(p => p.category === page.category && p.slug !== page.slug)
  .slice(0, 3);

// Get next/previous pages (by category order)
const categoryPages = wikiPages.filter(p => p.category === page.category);
const currentIndex = categoryPages.findIndex(p => p.slug === page.slug);
const previousPage = currentIndex > 0 ? categoryPages[currentIndex - 1] : null;
const nextPage = currentIndex < categoryPages.length - 1 ? categoryPages[currentIndex + 1] : null;

const difficultyColors = {
  beginner: 'bg-green-500/20 text-green-400 border-green-500/30',
  intermediate: 'bg-yellow-500/20 text-yellow-400 border-yellow-500/30',
  advanced: 'bg-red-500/20 text-red-400 border-red-500/30'
};

const difficultyColor = page.difficulty ? difficultyColors[page.difficulty] : '';

// Prepare metadata for social sharing
const postUrl = `${Astro.site}wiki/${page.slug}`;
---

<WikiLayout 
  title={page.title} 
  description={page.description}
  currentSlug={page.slug}
>
  <article class="p-8">
    <div class="max-w-4xl">
      <!-- Breadcrumb -->
      <nav class="mb-8">
        <ol class="flex items-center space-x-2 text-sm text-secondary-400">
          <li>
            <a href="/wiki" class="hover:text-accent-400 transition-colors">Wiki</a>
          </li>
          <li>
            <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
              <polyline points="9 18 15 12 9 6"></polyline>
            </svg>
          </li>
          <li>
            <a href={`/wiki#category-${page.category.toLowerCase().replace(/\s+/g, '-')}`} class="hover:text-accent-400 transition-colors">
              {page.category}
            </a>
          </li>
          <li>
            <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
              <polyline points="9 18 15 12 9 6"></polyline>
            </svg>
          </li>
          <li class="text-white">{page.title}</li>
        </ol>
      </nav>

      <!-- Page Header -->
      <header class="max-w-4xl mx-auto mb-12">
        <div class="flex flex-wrap items-center gap-3 mb-4">
          {categoryInfo && (
            <span class="inline-flex items-center gap-2 text-sm px-3 py-1 bg-secondary-800 text-secondary-300 rounded">
              <span class={categoryInfo.color} set:html={categoryInfo.icon}></span>
              {page.category}
            </span>
          )}
          {page.difficulty && (
            <span class={`text-sm px-3 py-1 rounded border ${difficultyColor}`}>
              {page.difficulty}
            </span>
          )}
          {page.featured && (
            <span class="bg-accent-500 text-white text-sm px-3 py-1 rounded font-medium">
              Featured
            </span>
          )}
        </div>
        
        <h1 class="text-4xl font-bold mb-4">{page.title}</h1>
        <p class="text-xl text-secondary-300 mb-6">{page.description}</p>
        
        <div class="flex flex-wrap items-center gap-4 text-secondary-400 text-sm">
          <span>Last updated {formattedDate}</span>
          {page.tags.length > 0 && (
            <div class="flex items-center gap-2">
              <span>Tags:</span>
              <div class="flex flex-wrap gap-2">
                {page.tags.map((tag: string) => (
                  <span class="px-2 py-1 bg-secondary-800/50 text-secondary-400 rounded text-xs">
                    {tag}
                  </span>
                ))}
              </div>
            </div>
          )}
        </div>
      </header>

      <!-- Main Content -->
      <div class="max-w-4xl mx-auto">
        <div class="prose prose-invert prose-lg max-w-none">
          <Fragment set:html={htmlContent} />
        </div>
      </div>

      <!-- Page Navigation -->
      <div class="max-w-4xl mx-auto mt-16 pt-8 border-t border-secondary-800">
        <div class="grid grid-cols-1 md:grid-cols-2 gap-6 mb-8">
          {previousPage && (
            <a href={`/wiki/${previousPage.slug}`} class="group flex items-center gap-3 p-4 bg-secondary-900/50 border border-secondary-800 rounded-lg hover:border-secondary-700 transition-all duration-200 no-underline">
              <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="text-accent-500 group-hover:-translate-x-1 transition-transform">
                <polyline points="15 18 9 12 15 6"></polyline>
              </svg>
              <div>
                <div class="text-secondary-400 text-sm">Previous</div>
                <div class="text-white font-medium group-hover:text-accent-400 transition-colors">{previousPage.title}</div>
              </div>
            </a>
          )}
          
          {nextPage && (
            <a href={`/wiki/${nextPage.slug}`} class="group flex items-center gap-3 p-4 bg-secondary-900/50 border border-secondary-800 rounded-lg hover:border-secondary-700 transition-all duration-200 no-underline md:ml-auto">
              <div class="text-right">
                <div class="text-secondary-400 text-sm">Next</div>
                <div class="text-white font-medium group-hover:text-accent-400 transition-colors">{nextPage.title}</div>
              </div>
              <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="text-accent-500 group-hover:translate-x-1 transition-transform">
                <polyline points="9 18 15 12 9 6"></polyline>
              </svg>
            </a>
          )}
        </div>

        <!-- Back to Wiki -->
        <div class="text-center">
          <a href="/wiki" class="inline-flex items-center gap-2 text-accent-500 hover:text-accent-400 font-semibold transition-colors">
            <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
              <path d="M19 12H5"></path>
              <path d="M12 19l-7-7 7-7"></path>
            </svg>
            Back to Wiki
          </a>
        </div>
      </div>

      <!-- Related Pages -->
      {relatedPages.length > 0 && (
        <aside class="max-w-4xl mx-auto mt-16 pt-8 border-t border-secondary-800">
          <h2 class="text-2xl font-bold mb-6">Related Pages</h2>
          <div class="grid grid-cols-1 md:grid-cols-3 gap-6">
            {relatedPages.map(relatedPage => (
              <a href={`/wiki/${relatedPage.slug}`} class="block p-4 bg-secondary-900/50 border border-secondary-800 rounded-lg hover:border-secondary-700 transition-all duration-200 no-underline group">
                <h3 class="font-semibold text-white mb-2 group-hover:text-accent-400 transition-colors">
                  {relatedPage.title}
                </h3>
                <p class="text-secondary-300 text-sm line-clamp-2">
                  {relatedPage.description}
                </p>
              </a>
            ))}
          </div>
        </aside>
      )}
    </div>
  </article>
</WikiLayout>

<style>
  .prose {
    --tw-prose-body: theme('colors.secondary.300');
    --tw-prose-headings: theme('colors.white');
    --tw-prose-lead: theme('colors.secondary.300');
    --tw-prose-links: theme('colors.accent.500');
    --tw-prose-bold: theme('colors.white');
    --tw-prose-counters: theme('colors.secondary.400');
    --tw-prose-bullets: theme('colors.secondary.400');
    --tw-prose-hr: theme('colors.secondary.800');
    --tw-prose-quotes: theme('colors.secondary.200');
    --tw-prose-quote-borders: theme('colors.primary.500');
    --tw-prose-captions: theme('colors.secondary.400');
    --tw-prose-code: theme('colors.white');
    --tw-prose-pre-code: theme('colors.secondary.300');
    --tw-prose-pre-bg: theme('colors.secondary.950');
    --tw-prose-th-borders: theme('colors.secondary.800');
    --tw-prose-td-borders: theme('colors.secondary.800');
  }

  .prose a {
    text-decoration: none;
    border-bottom: 1px solid theme('colors.accent.500');
    transition: border-color 0.2s, color 0.2s;
  }

  .prose a:hover {
    border-bottom-color: theme('colors.accent.400');
    color: theme('colors.accent.400');
  }

  .prose pre {
    background-color: theme('colors.secondary.950');
    border: 1px solid theme('colors.secondary.800');
    border-radius: 0.375rem;
  }

  .prose code {
    background-color: theme('colors.secondary.800');
    padding: 0.2em 0.4em;
    border-radius: 0.25rem;
    font-size: 0.875em;
  }

  .prose blockquote {
    border-left-color: theme('colors.primary.500');
    background-color: theme('colors.secondary.900');
    padding: 1rem;
    border-radius: 0.375rem;
  }

  /* Line clamp utility */
  .line-clamp-2 {
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }

  /* Ensure headings have proper spacing for scroll positioning */
  .prose h2,
  .prose h3 {
    scroll-margin-top: 120px;
  }
</style>
</Layout>